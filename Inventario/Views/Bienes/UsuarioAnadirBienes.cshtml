
@using System.Web.UI.WebControls;
@using Inventario.Models;
@model Inventario.Models.Bienes
@{
    ViewBag.Title = "Anadir Bienes";
    Layout = "~/Views/Shared/UsuarioLayout.cshtml";
}
   <h2 class="text-center titulo">AnadirBienes</h2>

<div class="container">
    @using (Html.BeginForm("UsuarioAnadirBienes", "Bienes", FormMethod.Post, new { id = "formulario" }))
    {
        @Html.AntiForgeryToken()
       
            <p>Digite los datos requeridos</p>
            <hr />
            <p class="d-none text-danger" id="v">*Datos Invalidos</p>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
           
            <div class="form-row">
                <div class="col form-group">
                    @Html.LabelFor(model => model.numeroDePatrimonio, "Número de Patrimonio", htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.numeroDePatrimonio, new { htmlAttributes = new { @class = "form-control", maxlength = 9 } })
                    @Html.ValidationMessageFor(model => model.numeroDePatrimonio, "", new { @class = "text-danger" })
                </div>

                <div class="col form-group">
                    @Html.LabelFor(model => model.codigoDeBarras, "Código de barras", htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.codigoDeBarras, new { htmlAttributes = new { @class = "form-control", maxlength = 10 } })
                    @Html.ValidationMessageFor(model => model.codigoDeBarras, "", new { @class = "text-danger" })
                </div>
           
            </div>
            
            <div class="form-row">
                <div class="col-10 form-group">
                    @Html.LabelFor(model => model.numeroDeFactura, "Número de factura", htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.numeroDeFactura, new { htmlAttributes = new { @class = "form-control", maxlength = 10 } })
                    @Html.ValidationMessageFor(model => model.numeroDeFactura, "", new { @class = "text-danger" })
                </div>
                <div class="col-2 form-group">
                    @Html.LabelFor(model => model.ley, "Ley que financia", htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.ley, new { htmlAttributes = new { @class = "form-control", maxlength = 4 } })
                    @Html.ValidationMessageFor(model => model.ley, "", new { @class = "text-danger" })
                </div>
            </div>
            <hr />
            <div class="form-group">
                @Html.LabelFor(model => model.descripcion, "Descripción del bien", htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.descripcion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.descripcion, "", new { @class = "text-danger" })
            </div>

            <div class="form-row">
                <div class="col form-group">
                    @Html.LabelFor(model => model.marca, "Marca", htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.marca, new { htmlAttributes = new { @class = "form-control",maxlength = 10 } })
                    @Html.ValidationMessageFor(model => model.marca, "", new { @class = "text-danger" })
                </div>

                <div class="col form-group">
                    @Html.LabelFor(model => model.modelo, "Modelo", htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.modelo, new { htmlAttributes = new { @class = "form-control", maxlength=20 } })
                    @Html.ValidationMessageFor(model => model.modelo, "", new { @class = "text-danger" })
                </div>

                <div class="col form-group">
                    @Html.LabelFor(model => model.serie, "Serie", htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.serie, new { htmlAttributes = new { @class = "form-control",maxlength = 20 } })
                    @Html.ValidationMessageFor(model => model.serie, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-row">
                <div class="col-1 form-group">
                    @Html.LabelFor(model => model.ubicacion, "Ubicación", htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.ubicacion, new { htmlAttributes = new { @class = "form-control", maxlength = 3 } })
                    @Html.ValidationMessageFor(model => model.ubicacion, "", new { @class = "text-danger" })
                </div>

                <div class="col-4 form-group">
                    @Html.LabelFor(model => model.IDEspecialidad, "Especialidad asignada", htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownList("IDEspecialidad",null, htmlAttributes: new { @class = "form-control",@id ="IDEspecialidad"  })
                    @Html.ValidationMessageFor(model => model.IDEspecialidad, "", new { @class = "text-danger" })
                </div>
              </div>
          
                <div class="form-row">
                    <div class="col-3 form-group">
                        @Html.LabelFor(model => model.condicion, "Condicion del bien", htmlAttributes: new { @class = "control-label " })
                        @Html.DropDownListFor(model => model.condicion, new SelectList(Enum.GetValues(typeof(CondicionesEnum))), "Selecciona Condicion", new { @class = "form-control", @id = "condicion" })
                        @Html.ValidationMessageFor(model => model.condicion, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-3 form-group">
                        @Html.LabelFor(model => model.estado, "Estado del bien", htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownListFor(model => model.estado, new SelectList(Enum.GetValues(typeof(EstadosEnum))), "Selecciona Estado", new { @class = "form-control", @id = "estado" })
                        @Html.ValidationMessageFor(model => model.estado, "", new { @class = "text-danger" })
                    </div>
                     <div class="col-6"></div>
                </div>    
              
                <div class="form-row">

                </div>
            <div class="form-group">
                <div class="col offset-6">
                    <input type="submit" enabled id="anadir" value="Añadir" class="btn btn-outline-secondary" />
                </div>
            </div>
       
    }
    <script src="~/Scripts/validaranadir.js"></script>
    <div>
        @Html.ActionLink("Ver Bienes", "UsuarioVerBienes")
    </div>
</div>